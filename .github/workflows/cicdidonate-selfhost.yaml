on:
  push:
    branches: [ "development" ]

env:
  IMAGE_NAME: idonate-image

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Use with SHA
        run: |
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Show the TAGS values
        run: |
          echo "TAG value is : ${{ env.TAG }}"
      - name: Login to Docker Registry
        run: |
          echo "${{ secrets.PASSWORD }}" | docker login -u ${{ secrets.USERNAME }} --password-stdin
      - name: Build Docker Image
        run: docker build -t ${{ secrets.USERNAME }}/${{env.IMAGE_NAME }}:${{ env.TAG }} .
      - name: Push the Docker image
        run: |
          docker push ${{ secrets.USERNAME }}/${{env.IMAGE_NAME }}:${{ env.TAG }}
      - name: Logout from the Registry
        if: always()
        run: |
          docker logout
deploy-service:
  needs: build-and-push
  runs-on: self-hosted
  environment:
    TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    DOMAIN_NAME: "https://idata-api.istad.co"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Use with SHA
      run: |
        echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
    - name: Stop the container
      run: |
        sudo docker compose down
    - name: Update Docker Compose
      run: |
        yq eval '.services.reactjs-srv.image="kevintido/${{env.IMAGE_NAME }}:${{ env.TAG }}"' -i docker-compose.yaml
    - name: Run the container
      run: |
        sudo docker compose up -d
    - name: Send Telegram Notification on deploy Success
      if: success() # Only runs successful on deployment branch
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d parse_mode=Markdown \
        -d text="*Idonate Deployment Successful:*
        - *Container:* kevintido/${{env.IMAGE_NAME}}
        - *Tag:* ${{ env.TAG }}
        - *Branch:* development
        - *Deployment URL:* [idonate](https://idonate.kangtido.life)"
    - name: Send Telegram Notification on Failure
      if: failure() # Only runs if the deployment fails
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d parse_mode=Markdown \
        -d text="*Deployment Failed:*
        - *Container:* kevintido/${{env.IMAGE_NAME}}
        - *Tag:* ${{ env.TAG }}"
