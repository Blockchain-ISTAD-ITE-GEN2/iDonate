on:
  push:
    branches: ["development"]

env:
  IMAGE_NAME: idonate-image

jobs:
  build-run-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set TAG with SHA
        run: |
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Show the TAG value
        run: |
          echo "TAG value is: $TAG"
      - name: Login to Docker Registry
        run: |
          echo "${{ secrets.PASSWORD }}" | docker login -u ${{ secrets.USERNAME }} --password-stdin
      - name: Build Docker Image
        run: docker build -t ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:$TAG .
      - name: Push the Docker image
        run: docker push ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:$TAG
      - name: Logout from the Registry
        if: always()
        run: |
          docker logout

  deploy-service:
    needs: build-run-service
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set TAG with SHA
        run: |
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Stop the container
        run: sudo docker compose down
      - name: Update Docker Compose
        run: |
          yq eval ".services.reactjs-srv.image=\"kevintido/${{ env.IMAGE_NAME }}:$TAG\"" -i docker-compose.yaml
      - name: Run the container
        run: sudo docker compose up -d
      - name: Send Telegram Notification on Deploy Success
        if: success()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d parse_mode=Markdown \
          -d text="*Idonate Deployment Successful:*\n\n- *Container:* kevintido/${{ env.IMAGE_NAME }}\n- *Tag:* $TAG\n- *Branch:* development\n- *Deployment URL:* [https://idonate.kangtido.life](https://idonate.kangtido.life)\n\n*Application URL:* [http://35.213.142.87:3000/](http://35.213.142.87:3000/)"
      - name: Send Telegram Notification on Failure
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d parse_mode=Markdown \
          -d text="*Deployment On UI Failed:*\n\n- *Container:* kevintido/${{ env.IMAGE_NAME }}\n- *Tag:* $TAG"
