 deploy-service:
  needs: build-run-service
  runs-on: self-hosted
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set TAG with SHA
      run: echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

    - name: Change Directory & Stop the container
      run: |
        cd /idnoate-front
        sudo docker-compose down

    - name: Update Docker Compose with New Image
      run: |
        cd /idnoate-front
        yq eval ".services.reactjs-srv.image=\"kevintido/${{ env.IMAGE_NAME }}:$TAG\"" -i docker-compose.yaml

    - name: Change Directory & Run the container
      run: |
        cd /idnoate-front
        sudo docker-compose up -d

    - name: Change Directory & Run Additional Script
      run: |
        cd /idnoate-front
        ./run.sh  # This ensures your script is executed automatically

    - name: Send Telegram Notification on Deploy Success
      if: success()
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
        -d parse_mode=Markdown \
        -d text="*Idonate Deployment Successful:*\n\n- *Container:* kevintido/${{ env.IMAGE_NAME }}\n- *Tag:* $TAG\n- *Branch:* development\n- *Deployment URL:* [https://idonate.istad.co](https://idonate.istad.co)\n\n*Application URL:* [http://34.87.176.40:3000/](http://34.87.176.40:3000/)"

    - name: Send Telegram Notification on Failure
      if: failure()
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
        -d parse_mode=Markdown \
        -d text="*Deployment On UI Failed:*\n\n- *Container:* kevintido/${{ env.IMAGE_NAME }}\n- *Tag:* $TAG"
